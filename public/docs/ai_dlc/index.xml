<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI DLC on Together</title>
    <link>https://example.org/docs/ai_dlc/</link>
    <description>Recent content in AI DLC on Together</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://example.org/docs/ai_dlc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Design</title>
      <link>https://example.org/docs/ai_dlc/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/docs/ai_dlc/design/</guid>
      <description>&lt;h1 id=&#34;design-document---smart-cooking-mvp&#34;&gt;Design Document - Smart Cooking MVP&lt;a class=&#34;anchor&#34; href=&#34;#design-document---smart-cooking-mvp&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Smart Cooking MVP là một ứng dụng nấu ăn thông minh sử dụng kiến trúc serverless trên AWS với AI engine để gợi ý công thức dựa trên nguyên liệu có sẵn. Hệ thống áp dụng chiến lược flexible mix giữa database và AI generation để tối ưu chi phí và chất lượng, kết hợp với community-driven auto-approval system.&lt;/p&gt;&#xA;&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;a class=&#34;anchor&#34; href=&#34;#architecture&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;high-level-architecture&#34;&gt;High-Level Architecture&lt;a class=&#34;anchor&#34; href=&#34;#high-level-architecture&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;graph TB&#xD;&#xA;    subgraph &amp;#34;Client Layer&amp;#34;&#xD;&#xA;        Web[Next.js Web App&amp;lt;br/&amp;gt;Responsive Design]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    subgraph &amp;#34;CDN &amp;amp; Hosting&amp;#34;&#xD;&#xA;        CF[CloudFront CDN&amp;lt;br/&amp;gt;Global Distribution]&#xD;&#xA;        S3[S3 Static Hosting&amp;lt;br/&amp;gt;Next.js Build Output]&#xD;&#xA;        R53[Route 53&amp;lt;br/&amp;gt;Custom Domain]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    subgraph &amp;#34;API Gateway&amp;#34;&#xD;&#xA;        APIGW[API Gateway&amp;lt;br/&amp;gt;REST API + CORS]&#xD;&#xA;        Auth[Cognito Authorizer&amp;lt;br/&amp;gt;JWT Validation]&#xD;&#xA;        WAF[AWS WAF&amp;lt;br/&amp;gt;Security Rules]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    subgraph &amp;#34;Lambda Functions&amp;#34;&#xD;&#xA;        L1[auth-handler&amp;lt;br/&amp;gt;256MB, 10s]&#xD;&#xA;        L2[ai-suggestion&amp;lt;br/&amp;gt;1024MB, 60s]&#xD;&#xA;        L3[cooking-history&amp;lt;br/&amp;gt;256MB, 10s]&#xD;&#xA;        L4[rating-handler&amp;lt;br/&amp;gt;256MB, 10s]&#xD;&#xA;        L5[ingredient-validator&amp;lt;br/&amp;gt;256MB, 10s]&#xD;&#xA;        L6[recipe-crud&amp;lt;br/&amp;gt;512MB, 30s]&#xD;&#xA;        L7[user-profile&amp;lt;br/&amp;gt;256MB, 10s]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    subgraph &amp;#34;AI &amp;amp; Data&amp;#34;&#xD;&#xA;        Bedrock[Amazon Bedrock&amp;lt;br/&amp;gt;Claude 3 Haiku]&#xD;&#xA;        DDB[(DynamoDB&amp;lt;br/&amp;gt;Single Table Design)]&#xD;&#xA;        S3[(S3 Bucket&amp;lt;br/&amp;gt;Recipe Images)]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    subgraph &amp;#34;Monitoring&amp;#34;&#xD;&#xA;        CW[CloudWatch&amp;lt;br/&amp;gt;Logs + Metrics]&#xD;&#xA;        XRay[X-Ray Tracing&amp;lt;br/&amp;gt;Performance]&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    Web --&amp;gt; CF&#xD;&#xA;    CF --&amp;gt; S3&#xD;&#xA;    CF --&amp;gt; APIGW&#xD;&#xA;    R53 --&amp;gt; CF&#xD;&#xA;    APIGW --&amp;gt; WAF&#xD;&#xA;    WAF --&amp;gt; Auth&#xD;&#xA;    Auth --&amp;gt; L1 &amp;amp; L2 &amp;amp; L3 &amp;amp; L4 &amp;amp; L5 &amp;amp; L6 &amp;amp; L7&#xD;&#xA;&#xD;&#xA;    L2 --&amp;gt; Bedrock&#xD;&#xA;    L1 &amp;amp; L2 &amp;amp; L3 &amp;amp; L4 &amp;amp; L5 &amp;amp; L6 &amp;amp; L7 --&amp;gt; DDB&#xD;&#xA;    L6 --&amp;gt; S3&#xD;&#xA;&#xD;&#xA;    L2 &amp;amp; L3 &amp;amp; L4 --&amp;gt; CW&#xD;&#xA;    APIGW --&amp;gt; XRay&lt;/pre&gt;&lt;h3 id=&#34;technology-stack&#34;&gt;Technology Stack&lt;a class=&#34;anchor&#34; href=&#34;#technology-stack&#34;&gt;#&lt;/a&gt;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;Frontend:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Requirements</title>
      <link>https://example.org/docs/ai_dlc/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/docs/ai_dlc/requirements/</guid>
      <description>&lt;h1 id=&#34;requirements-document---smart-cooking-mvp&#34;&gt;Requirements Document - Smart Cooking MVP&lt;a class=&#34;anchor&#34; href=&#34;#requirements-document---smart-cooking-mvp&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Smart Cooking App là nền tảng ứng dụng nấu ăn thông minh sử dụng AI để cá nhân hóa gợi ý công thức dựa trên nguyên liệu có sẵn, tối ưu hóa việc sử dụng nguyên liệu để giảm lãng phí thực phẩm, và kết nối cộng đồng người yêu thích nấu ăn. Hệ thống sử dụng kiến trúc serverless trên AWS với chiến lược flexible mix giữa database và AI generation để tối ưu chi phí và chất lượng.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tasks</title>
      <link>https://example.org/docs/ai_dlc/tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/docs/ai_dlc/tasks/</guid>
      <description>&lt;h1 id=&#34;implementation-plan&#34;&gt;Implementation Plan&lt;a class=&#34;anchor&#34; href=&#34;#implementation-plan&#34;&gt;#&lt;/a&gt;&lt;/h1&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1. Set up project infrastructure and authentication&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.1 Create AWS CDK project structure with TypeScript&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initialize CDK project with environment-specific configurations (dev/prod)&lt;/li&gt;&#xA;&lt;li&gt;Create base stack structure for database, auth, API, Lambda, and frontend hosting&lt;/li&gt;&#xA;&lt;li&gt;Set up GitHub Actions workflow for automated deployment&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Requirements: 8.2, 9.1&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.2 Implement DynamoDB single-table design&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create DynamoDB table &lt;code&gt;smart-cooking-data&lt;/code&gt; with PK/SK structure&lt;/li&gt;&#xA;&lt;li&gt;Configure 3 GSI indexes for user queries, search, and discovery&lt;/li&gt;&#xA;&lt;li&gt;Enable TTL for auto-cleanup and point-in-time recovery for production&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Requirements: 6.1, 7.1&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 1.3 Set up Cognito User Pool and authentication&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
